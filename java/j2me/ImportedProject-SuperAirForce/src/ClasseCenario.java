/*
 Classe responsavel por inicializar os parametros do cenario
 */
//Cenario super air force

import javax.microedition.lcdui.*;
import javax.microedition.lcdui.game.*;
//import javax.microedition.io.*;

/**
 *
 * @author Michell - ADM
 */
public final class ClasseCenario{

    protected Image fundo;

    protected int posX;
    protected int posY;
    protected int largBloco;
    protected int altBloco;
    protected int largMapaEmBloco;
    protected int altMapaEmBloco;

    // A máscara de colisão com o cenário
    boolean blocos[];

        
    // O tiled layer
    TiledLayer mapa;

    // O tilemap
    int  colideCom [] = {0};
    
    //FileReader texto = new Reader("palavras.txt") ;
  /*
int [] cenario_map = {
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 6, 6, 6, 6, 6, 42, 42, 6, 6,
6, 6, 6, 6, 6, 6, 42, 6, 6, 6,
6, 2, 6, 6, 6, 42, 42, 6, 6, 6,
43, 11, 6, 6, 6, 42, 6, 6, 15, 16,
43, 11, 6, 6, 6, 42, 6, 6, 6, 6,
6, 11, 6, 6, 6, 42, 6, 6, 6, 6,
6, 11, 6, 6, 6, 42, 6, 6, 6, 6,
6, 11, 6, 6, 42, 6, 6, 6, 6, 6,
6, 29, 6, 6, 6, 42, 6, 6, 6, 6,
6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
6, 6, 6, 6, 42, 6, 6, 6, 6, 6,
6, 6, 6, 6, 42, 6, 6, 6, 6, 6,
6, 6, 6, 6, 42, 6, 6, 6, 6, 6,
6, 6, 6, 6, 42, 6, 6, 6, 6, 6,
42, 6, 6, 6, 42, 6, 6, 6, 6, 6,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
42, 42, 42, 42, 42, 42, 42, 42, 42, 42
};

*/
    int [] cenario_map = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 61, 61, 1, 61, 61, 61, 61, 61, 1,
61, 61, 1, 61, 61, 61, 1, 1, 61, 1,
61, 61, 61, 61, 61, 61, 1, 1, 61, 1,
61, 61, 61, 61, 61, 61, 1, 61, 61, 1,
61, 61, 61, 61, 61, 61, 61, 1, 1, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 1, 1, 61, 61,
61, 61, 61, 61, 61, 61, 1, 61, 68, 61,
61, 61, 61, 61, 61, 61, 1, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 68, 61,
61, 61, 61, 61, 61, 61, 61, 61, 68, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 14,
61, 61, 61, 61, 61, 61, 61, 61, 14, 28,
61, 61, 61, 61, 61, 61, 61, 61, 37, 40,
61, 61, 61, 61, 61, 61, 61, 48, 49, 51,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 9, 4, 5, 8, 61, 61, 61, 61,
61, 61, 4, 5, 5, 64, 61, 61, 61, 61,
61, 14, 15, 43, 44, 77, 61, 61, 61, 61,
60, 48, 49, 50, 49, 64, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 14,
61, 61, 61, 61, 61, 61, 61, 61, 14, 27,
61, 61, 61, 61, 61, 61, 61, 14, 26, 39,
61, 61, 61, 61, 61, 61, 61, 37, 28, 28,
61, 61, 61, 61, 61, 61, 61, 48, 49, 50,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 60, 10, 10, 61, 61, 61, 61, 61, 61,
61, 14, 5, 18, 19, 68, 61, 61, 61, 61,
14, 15, 16, 27, 28, 77, 60, 61, 61, 61,
25, 28, 29, 30, 31, 75, 60, 61, 61, 61,
48, 49, 50, 51, 44, 36, 60, 61, 61, 61,
60, 60, 60, 60, 60, 60, 61, 61, 61, 61,
61, 60, 60, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
61, 61, 61, 61, 61, 61, 61, 61, 61, 4,
61, 61, 61, 61, 61, 61, 61, 61, 14, 16,
61, 61, 61, 61, 61, 61, 24, 14, 15, 39,
61, 61, 61, 61, 61, 60, 14, 38, 38, 39,
1, 61, 61, 61, 61, 61, 48, 49, 50, 51,
1, 61, 61, 61, 61, 61, 61, 61, 1, 61,
1, 61, 1, 61, 61, 61, 61, 61, 61, 61,
1, 61, 1, 1, 61, 61, 61, 61, 61, 61,
1, 10, 65, 60, 1, 61, 61, 61, 1, 61,
14, 26, 15, 19, 66, 1, 1, 61, 1, 61,
25, 26, 27, 39, 77, 1, 1, 61, 61, 61,
1, 37, 49, 50, 51, 1, 1, 61, 61, 61,
60, 1, 60, 1, 60, 1, 61, 1, 60, 1,
1, 60, 1, 61, 1, 60, 61, 61, 1, 60,
12, 12, 61, 61, 1, 61, 61, 1, 1, 4,
1, 1, 61, 61, 12, 61, 1, 1, 4, 5,
12, 61, 61, 61, 61, 61, 60, 14, 15, 16,
12, 61, 1, 1, 1, 60, 61, 48, 49, 50,
60, 61, 61, 61, 60, 61, 60, 61, 60, 61,
61, 60, 61, 60, 61, 60, 1, 60, 61, 60,
60, 61, 1, 61, 60, 61, 60, 12, 60, 61,
70, 70, 60, 71, 71, 1, 71, 72, 72, 72,
61, 60, 60, 60, 60, 60, 61, 60, 60, 60,
60, 60, 60, 62, 63, 64, 60, 60, 60, 60,
70, 71, 10, 63, 74, 74, 75, 76, 77, 70
};




//==============================================================================
    public ClasseCenario (String str, int largMapa, int altMapa, int larguraBloco, int alturaBloco){

        posX = 0;
        posY = 0;
        this.largBloco = larguraBloco;
        this.altBloco = alturaBloco;
        largMapaEmBloco = largMapa;
        
        
        
       // this.plantaforma_celular_map = plantaforma_celular_map;

        try
        {
            fundo = Image.createImage(str);
            // Cria o tilemap
            //a imagem tem que comportar o tamanho do bloco
	   // mapa = new TiledLayer(largMapa, altMapa, fundo, larguraBloco, alturaBloco);
           // fundo = null;//desaloca imagem

        }//try
        catch(java.io.IOException e)
        {
        System.err.println(e+"erro construtor cenario");
        }
        
         mapa = new TiledLayer(largMapa, altMapa, fundo, larguraBloco, alturaBloco);

        inicializaVetor ();

    }//construtor
//==============================================================================
    public void inicializaVetor (){

        int linha, coluna;

                  for(int i=0; i<cenario_map.length; i++)
			{
				coluna = i%largMapaEmBloco;         // Cada linha tem 25 blocos
				linha = (i - coluna)/largMapaEmBloco;
                               mapa.setCell(coluna, linha, cenario_map[i]);

			}//for

    }//inicializaVetor

//==============================================================================
    public void criaMascara (){

         // Inicio a máscara de colisão
		int total = (LargMapaBloco ())*(AltMapaBloco ());

		blocos = new boolean [total];

		// Para cada posição do mapa
		for(int i=0;i<total;i++){

			// Para cada código de bloco no vetor colideCom
			for(int j=0;j<colideCom.length;j++){                            

				// Testa se é igual a um dos blocos de colisão
				if(cenario_map[i] == colideCom[j])
				{
					blocos[i] = true;
					break;
				}//if
				else{
					blocos[j] = false;
                            }//else

                    }//for j
         }//for i


                    cenario_map  = null;
                    colideCom = null;


     }//criaMascara
//==============================================================================
     public boolean verificaColisao (int x, int y){

         int colunaBloco = x/LargBloco();
         //colunaBloco ;
         int fileiraBloco = y/AltBloco();
         //fileiraBloco

        //verifica se o bloco é valido
             if (blocos[colunaBloco + fileiraBloco*25]){

                 //se o valor do tile for igual aos valores proibidos.

                 return true;

             }//if



            return false;

    }//verificaColisao
     
//==============================================================================
   public int getPosX (){
       return posX;
   }
//==============================================================================
    public int getPosY (){
       return posY;
   }
//==============================================================================
     public int LargMapa (){
       return mapa.getWidth();
   }
//==============================================================================
     public int LargMapaBloco (){
       return (mapa.getWidth()/largBloco);
   }
//==============================================================================
     public int AltMapa (){
       return mapa.getHeight();
   }
//==============================================================================
     public int AltMapaBloco (){
       return (mapa.getHeight()/altBloco);
   }
//==============================================================================
     public int LargBloco (){
       return this.largBloco;
   }
//==============================================================================
     public int AltBloco (){
       return this.altBloco;
   }
//==============================================================================
     public void setPosX (int x){
         posX = x;
   }
//==============================================================================
     public void setPosY (int y){
         posY = y;
   }

//==============================================================================
    }//classe

